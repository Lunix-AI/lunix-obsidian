import * as fs from "node:fs";
import path from "node:path";
import process from "node:process";
import { fileURLToPath } from "node:url";
import builtins from "builtin-modules";
import esbuild from "esbuild";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";
const devProd = process.argv[2] === "dev-production";

// __dirname shim
const __dirname = path.dirname(fileURLToPath(import.meta.url));

/**
 *
 * @type {import('esbuild').Plugin}
 */
const htmlAsTextPlugin = {
	name: "html-as-text",
	setup(build) {
		build.onLoad({ filter: /\.html$/ }, async (args) => {
			const contents = await fs.promises.readFile(args.path, "utf8");
			return {
				contents,
				loader: "text",
			};
		});
	},
};

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins,
	],
	format: "cjs",
	target: "es2022",
	logLevel: "info",
	sourcemap: prod || devProd ? false : "inline",
	minify: prod || devProd,
	treeShaking: true,
	outfile: "main.js",
	alias: {
		"~": "src",
		// language=file-reference
		querystring: path.resolve(__dirname, "shims/querystring.js"),
		// language=file-reference
		https: path.resolve(__dirname, "shims/https.js"),
		"node:events": "events",
		// language=file-reference
		events: path.resolve(__dirname, "shims/events.js"),
		// language=file-reference
		"node:stream": path.resolve(__dirname, "shims/stream.js"),
		// language=file-reference
		"node:string_decoder": path.resolve(__dirname, "shims/string_decoder.js"),
		// language=file-reference
		string_decoder: path.resolve(__dirname, "shims/string_decoder.js"),
		// language=file-reference
		ws: path.resolve(__dirname, "shims/ws.js"),
		// language=file-reference
		buffer: path.resolve(__dirname, "shims/buffer.js"),
		// language=file-reference
		util: path.resolve(__dirname, "shims/util.js"),
		// language=file-reference
		process: path.resolve(__dirname, "shims/process.js"),
	},
	plugins: [htmlAsTextPlugin],
	loader: {
		".html": "text",
	},
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
